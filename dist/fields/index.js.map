{"version":3,"sources":["../../src/fields/arrayRowLabelField.ts","../../src/fields/timeField.ts","../../src/fields/openingHoursField.ts"],"sourcesContent":["export const arrayRowLabelField = (props: { fieldName: string; prefix: string }) => {\n  return {\n    clientProps: props,\n    path: '@konstant/utilities-payload/client#ArrayRowLabel',\n  }\n}\n","import { createField } from '@/utils/createField.js'\nimport { field } from '@/utils/field.js'\n\nexport const timeField = createField((props) =>\n  field({\n    name: props.name ?? 'time',\n    type: 'date',\n    label: props.label ?? 'Time',\n    localized: false,\n    required: props?.required,\n\n    // defaultValue: name === \"open\" ? \"09:00\" : \"16:00\",\n    admin: {\n      condition: props?.condition,\n      date: {\n        displayFormat: 'HH:mm',\n        pickerAppearance: 'timeOnly',\n        timeFormat: 'HH:mm',\n      },\n      description: props?.description,\n    },\n  }),\n)\n","import { field } from '@/utils/field.js'\nimport { toCapitalized } from '@konstant/utilities-ui'\n\nimport { arrayRowLabelField } from './arrayRowLabelField.js'\nimport { timeField } from './timeField.js'\n\nexport const weekdaysMap: Record<string, string> = {\n  1: 'Mondays',\n  2: 'Tuesdays',\n  3: 'Wednesdays',\n  4: 'Thursdays',\n  5: 'Fridays',\n  6: 'Saturdays',\n  7: 'Sundays',\n}\n\nconst dayOptions = Object.keys(weekdaysMap).map((key) => ({\n  label: weekdaysMap[key] || '',\n  value: key,\n}))\n\nexport const openingHoursField = () => {\n  const items = field({\n    name: 'items',\n    type: 'array',\n    admin: {\n      components: {\n        RowLabel: arrayRowLabelField({\n          fieldName: 'label',\n          prefix: '',\n        }),\n      },\n    },\n    fields: [\n      field({\n        name: 'days',\n        type: 'select',\n        defaultValue: [],\n        hasMany: true,\n        localized: false,\n        options: dayOptions,\n        required: true,\n      }),\n      field({ name: 'label', type: 'text', localized: true, required: true }),\n      ...timeFields(),\n    ],\n    label: 'Opening Hours',\n  })\n\n  const customOpeningHours = field({\n    name: 'custom',\n    type: 'array',\n    fields: [\n      field({ name: 'label', type: 'text', localized: true, required: true }),\n      field({\n        name: 'date',\n        type: 'date',\n        admin: {\n          date: {\n            displayFormat: 'd MMM yyy',\n            pickerAppearance: 'dayOnly',\n          },\n        },\n        label: 'Date',\n        localized: false,\n        required: true,\n      }),\n      ...timeFields(),\n    ],\n    label: 'Custom Opening Hours',\n  })\n\n  return field({\n    name: 'openingHours',\n    type: 'group',\n    fields: [items, customOpeningHours],\n    interfaceName: 'OpeningHours',\n    label: '',\n  })\n}\n\nconst timeFields = () => {\n  return [\n    field({\n      type: 'row',\n      admin: {\n        condition: (_, siblingData) => !siblingData.isClosed,\n      },\n      fields: ['openingTime', 'closingTime'].map((name) =>\n        timeField({ name, label: toCapitalized(name) }),\n      ),\n    }),\n    field({ name: 'isClosed', type: 'checkbox', label: 'Closed whole day' }),\n    field({\n      name: 'closedLabel',\n      type: 'text',\n      admin: { condition: (_, siblingData) => siblingData.isClosed },\n    }),\n  ]\n}\n"],"mappings":"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","names":[]}