{"version":3,"sources":["../src/utils/createField.ts","../src/utils/field.ts"],"sourcesContent":["import type { Field } from 'payload'\n\nimport { deepMerge } from '@konstant/utilities-ui'\n\nexport type FieldCreateType<P = unknown> = {\n  condition?: (data: any, siblingData: any) => boolean\n  description?: string\n  fields?: Field[]\n  hidden?: boolean\n  hideGutter?: boolean\n  label?: string\n  localized?: boolean\n  name?: string\n  overrides?: Record<string, unknown>\n  required?: boolean\n} & P\n\ntype FieldCreationFunction<P = unknown> = (props: FieldCreateType<P>) => Field\n\nexport function createField<P>(fieldFn: FieldCreationFunction<P>) {\n  return (props: FieldCreateType<P> = {} as FieldCreateType<P>): Field => {\n    // Ensure fieldFn returns a valid Field\n    const field: any = fieldFn(props)\n    // Merge overrides with the base field\n    return deepMerge(field, props.overrides || {}) as Field\n  }\n}\n","import type { Field } from 'payload'\n\nconst getBaseProperties = () => {\n  return {}\n}\nexport const field = (props: Field): Field => {\n  const base = getBaseProperties()\n\n  return {\n    ...base,\n    ...props,\n  } as Field\n}\n"],"mappings":";;;;;AAmBO,SAAS,YAAe,SAAmC;AAChE,SAAO,CAAC,QAA4B,CAAC,MAAmC;AAEtE,UAAMA,SAAa,QAAQ,KAAK;AAEhC,WAAO,iBAAUA,QAAO,MAAM,aAAa,CAAC,CAAC;AAAA,EAC/C;AACF;;;ACxBA,IAAM,oBAAoB,MAAM;AAC9B,SAAO,CAAC;AACV;AACO,IAAM,QAAQ,CAAC,UAAwB;AAC5C,QAAM,OAAO,kBAAkB;AAE/B,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACF;","names":["field"]}