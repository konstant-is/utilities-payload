{"version":3,"sources":["../src/utils/getLocale.ts","../src/utils/getPayloadContext.ts"],"sourcesContent":["import type { BasePayload, SanitizedConfig } from 'payload'\n\n/**\n * Checks if a given string is a valid locale.\n * @param locale The locale string to validate.\n * @returns The validated locale if valid, otherwise throws an error.\n */\nconst isLocale = (locale: null | string | undefined, localeCodes: string[]): boolean => {\n  if (!locale) {\n    return false\n  }\n\n  return localeCodes.includes(locale)\n}\n\n/**\n * Validates and returns the locale.\n * @param locale The locale string to validate.\n * @returns The validated locale.\n */\nexport const getLocale = (config: SanitizedConfig, locale: null | string | undefined): string => {\n  const { localization } = config\n  if (!localization) {\n    throw new Error(`Localization is not supported by Payload`)\n  }\n  const { defaultLocale, localeCodes } = localization\n\n  if (isLocale(locale, localeCodes)) {\n    return locale as string\n  }\n\n  return defaultLocale\n}\n","import type { SanitizedConfig } from 'payload'\n\nimport { draftMode } from 'next/headers.js'\nimport { getPayload } from 'payload'\n\nimport type { PayloadQuery } from '../types.js'\n\nimport { getLocale } from './getLocale.js'\n\nexport const getPayloadContext = async (\n  config: Promise<SanitizedConfig> | SanitizedConfig,\n  params: PayloadQuery,\n) => {\n  const { isEnabled: draft } = await draftMode()\n  const payload = await getPayload({ config })\n  const processedLocale = getLocale(payload.config, params.locale)\n  const query = {\n    draft,\n    locale: processedLocale,\n    overrideAccess: draft,\n  }\n  return { draft, locale: processedLocale, payload, query }\n}\n"],"mappings":";AAOA,IAAM,WAAW,CAAC,QAAmC,gBAAmC;AACtF,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AAEA,SAAO,YAAY,SAAS,MAAM;AACpC;AAOO,IAAM,YAAY,CAAC,QAAyB,WAA8C;AAC/F,QAAM,EAAE,aAAa,IAAI;AACzB,MAAI,CAAC,cAAc;AACjB,UAAM,IAAI,MAAM,0CAA0C;AAAA,EAC5D;AACA,QAAM,EAAE,eAAe,YAAY,IAAI;AAEvC,MAAI,SAAS,QAAQ,WAAW,GAAG;AACjC,WAAO;AAAA,EACT;AAEA,SAAO;AACT;;;AC9BA,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAMpB,IAAM,oBAAoB,OAC/B,QACA,WACG;AACH,QAAM,EAAE,WAAW,MAAM,IAAI,MAAM,UAAU;AAC7C,QAAM,UAAU,MAAM,WAAW,EAAE,OAAO,CAAC;AAC3C,QAAM,kBAAkB,UAAU,QAAQ,QAAQ,OAAO,MAAM;AAC/D,QAAM,QAAQ;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,IACR,gBAAgB;AAAA,EAClB;AACA,SAAO,EAAE,OAAO,QAAQ,iBAAiB,SAAS,MAAM;AAC1D;","names":[]}